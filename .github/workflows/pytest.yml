name: pytest

on:
    workflow_call:
      inputs:
        name:
          required: true
          type: string
        machine:
          required: true
          type: string
        submodule:
          type: boolean
          default: false
        test_path:
          default: ./tests
          type: string
        python_path:
          type: string
          default: ""
        pixi_python_env:
            type: string
            default: default
        test_args:
          type: string
          default: ""
        cov:
          type: boolean
          default : false
        cov_thr:
          type: number
          default: 70
        
permissions:
  contents: read
  actions: read
  checks: write
jobs:
  pytest:
    runs-on: ${{inputs.machine}}
    steps:
      - uses: actions/checkout@v4

      - name: Update Submodule
        if: ${{inputs.submodule}}
        run: git submodule update --init --recursive

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          run-install: false

      - name: pytest
        if: runner.os == 'Windows' && success()
        run: |
          $Env:PYTHONPATH = "${{inputs.python_path}}"
          if (${{inputs.cov}}){$cov_args="--cov --cov-report="}
          pixi run -e ${{inputs.pixi_python_env}} pytest "${{inputs.test_path}}" --junit-xml results/pytest.xml $cov_args ${{inputs.test_args}}
      - name: Test Report Title
        run: |
          "## Test Report"| Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

      - name: Test Report
        uses: dorny/test-reporter@main
        if: success() || failure()    
        with:
          name: Pytest Report (${{inputs.name}})
          path: results/pytest.xml
          reporter: java-junit
          use-actions-summary: "true"

      - name: Coverage report
        if: ${{inputs.cov}}
        run: |
          pixi run -e ${{inputs.pixi_python_env}} coverage report
          Rename-Item .coverage .coverage.${{inputs.name}}

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{inputs.name}}
          path: '${{ github.workspace }}/.coverage.${{inputs.name}}'
          include-hidden-files: true
          if-no-files-found: error

  coverage:
    name: Coverage Summary
    runs-on: ubuntu-24.04
    needs: pytest
    steps:
      - uses: actions/checkout@v4

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          run-install: false

      - name: Install coverage
        run: pip global install coverage

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage and fail if it's <100%
        run: |
          coverage combine
          coverage html --skip-covered --skip-empty
          coverage report --fail-under=${{inputs.cov_thr}}
          coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov