name: pytest

on:
    workflow_call:
      inputs:
        name:
          required: true
          type: string
        machine:
          required: true
          type: string
        submodule:
          type: boolean
          default: false
        test_path:
          default: ./tests
          type: string
        python_path:
          type: string
          default: ""
        pixi_python_env:
            type: string
            default: default
        test_args:
          type: string
          default: ""
        cov:
          type: boolean
          default : false

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  pytest:
    runs-on: ${{inputs.machine}}
    steps:
      - uses: actions/checkout@v4

      - name: Update Submodule
        if: ${{inputs.submodule}}
        run: git submodule update --init --recursive

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          run-install: false

      - name: pytest
        if: runner.os == 'Windows' && success()
        run: |
          $Env:PYTHONPATH = "${{inputs.python_path}}"
          if ("${{inputs.cov}}" -eq "true")
          {pixi run -e ${{inputs.pixi_python_env}} pytest "${{inputs.test_path}}" --junit-xml results/pytest.xml --cov --cov-report= ${{inputs.test_args}}}
          else{pixi run -e ${{inputs.pixi_python_env}} pytest "${{inputs.test_path}}" --junit-xml results/pytest.xml ${{inputs.test_args}}}

      - name: Coverage report
        if: ${{inputs.cov && ( success() || failure()) }} 
        run: |
          pixi run -e ${{inputs.pixi_python_env}} coverage report
          Rename-Item .coverage .coverage.${{inputs.machine}}.${{inputs.name}}

      - name: Upload coverage data
        if: ${{inputs.cov && ( success() || failure())}} 
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{inputs.machine}}-${{inputs.name}}
          path: '${{ github.workspace }}/.coverage.${{inputs.machine}}.${{inputs.name}}'
          include-hidden-files: true
          if-no-files-found: error

      - name: Test Report
        uses: dorny/test-reporter@main
        if: success() || failure()
        with:
          name: Pytest Report (${{inputs.name}})
          path: results/pytest.xml
          reporter: java-junit
          use-actions-summary: "true"