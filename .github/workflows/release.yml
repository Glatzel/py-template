name: release

on:
  workflow_call:
    inputs:
      override:
        type: string
        required: true
      tag:
        type: string
        required: true
      have_changelog:
        type: boolean
        required: true
      assets:
        type: string
        default: ""
      draft: 
        type: boolean
        default: true
      call_back_workflow:
        type: string
        default: ""

env: 
  RELEASE_CHANGELOG: release_changelog.md

permissions:
  pull-requests: read
  contents: write

jobs:
  check-tag:
    runs-on: windows-latest
    outputs:
      is_pre_release: ${{ steps.main.outputs.is_pre_release }}
    steps:
      - id: main
        run: |
          $tag="${{inputs.tag}}"
          Write-Output "tag: $tag"
          if("$tag" -match '^v\d+\.\d+\.\d$' ){"IS_PRE_RELEASE=false" >> "$env:GITHUB_OUTPUT"}
          elseif("$tag" -match '^v\d+\.\d+\.\d-.*$') {"IS_PRE_RELEASE=true" >> "$env:GITHUB_OUTPUT"}
          else{throw "Unknown version: '$tag'"}

  clear-tag-and-release:
    needs: check-tag
    if: ${{inputs.override}}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - run: gh release delete ${{inputs.tag}} --cleanup-tag -y
        continue-on-error: true

  release-body:
    needs: clear-tag-and-release
    if: ${{inputs.have_changelog && !failure()}}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          run-install: false

      - name: Generate a changelog
        run: |
          pixi global install git-cliff
          git-cliff --unreleased --tag ${{inputs.tag}} --strip header > ${{env.RELEASE_CHANGELOG}}

      - uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: ${{env.RELEASE_CHANGELOG}}
          if-no-files-found: error

  call-back:
    if: ${{inputs.call_back_workflow !=''}}
    uses: ${{inputs.call_back_workflow}}

  create-release:
    needs: [check-tag,release-body,call-back]
    if: ${{!failure()}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download asset
        if: ${{inputs.assets !=''}}
        uses: actions/download-artifact@v4
        with:
          name: ${{inputs.assets}}
          path: ./release_asset

      - name: download changelog
        if: ${{inputs.have_changelog}}
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{inputs.have_changelog && null || env.RELEASE_CHANGELOG}}
          files: ${{inputs.assets=='' && null || './release_asset/**'}}
          tag_name: ${{inputs.tag}}
          draft: ${{inputs.draft}}
          prerelease: ${{needs.check-tag.outputs.is_pre_release}}